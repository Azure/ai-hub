{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "InitializeVariable-Language": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "language",
                            "type": "string",
                            "value": "@parameters('DEFAULT_LANGUAGE')"
                        }
                    ]
                },
                "runAfter": {
                    "BlobMetadata-VideoRaw": [
                        "SUCCEEDED"
                    ]
                }
            },
            "CopyBlob-VideosRaw": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "sourceContainerName": "@variables('containerName')",
                        "sourceBlobName": "@variables('blobName')",
                        "destinationContainerName": "@parameters('STORAGE_CONTAINER_NAME_RAW')",
                        "destinationBlobName": "@concat(variables('workflowId'),'/',variables('blobName'))",
                        "overrideIfExists": true
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "copyBlob",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "runAfter": {
                    "Condition": [
                        "SUCCEEDED"
                    ]
                }
            },
            "UploadBlob-ConfigJson": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "containerName": "@parameters('STORAGE_CONTAINER_NAME_RAW')",
                        "blobName": "@concat(variables('workflowId'),'/config.json')",
                        "content": {
                            "language": "@{variables('language')}",
                            "shortclip": 0,
                            "newstags": 1,
                            "videoFileContainerName": "@{parameters('STORAGE_CONTAINER_NAME_RAW')}",
                            "videoFileBlobName": "@{concat(variables('workflowId'),'/',variables('blobName'))}"
                        }
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "uploadBlob",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "runAfter": {
                    "CopyBlob-VideosRaw": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Condition": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@not(empty(body('BlobMetadata-VideoRaw')?['metadata']))",
                                true
                            ]
                        },
                        {
                            "equals": [
                                "@not(empty(body('BlobMetadata-VideoRaw')?['metadata']['language']))",
                                true
                            ]
                        }
                    ]
                },
                "actions": {
                    "SetVariable-Language": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "language",
                            "value": "@{triggerBody()?['metadata']['language']}"
                        }
                    }
                },
                "else": {
                    "actions": {}
                },
                "runAfter": {
                    "InitializeVariable-WorkflowId": [
                        "SUCCEEDED"
                    ]
                }
            },
            "DeleteBlob": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "containerName": "@variables('containerName')",
                        "blobName": "@variables('blobName')"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "deleteBlob",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "runAfter": {
                    "UploadBlob-ConfigJson": [
                        "SUCCEEDED"
                    ]
                }
            },
            "InitializeVariable-WorkflowId": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "workflowId",
                            "type": "string",
                            "value": "@{last(split(workflow()['run']['id'],'/'))}"
                        }
                    ]
                },
                "runAfter": {
                    "InitializeVariable-Language": [
                        "SUCCEEDED"
                    ]
                }
            },
            "InitializeVariable-ContainerName": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "containerName",
                            "type": "string",
                            "value": "@{split(triggerBody()?['subject'], '/')[4]}"
                        }
                    ]
                },
                "runAfter": {}
            },
            "InitializeVariable-BlobName": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "blobName",
                            "type": "string",
                            "value": "@{replace(triggerBody()?['subject'],concat('/blobServices/default/containers/',variables('containerName'),'/blobs/'),'')}"
                        }
                    ]
                },
                "runAfter": {
                    "InitializeVariable-ContainerName": [
                        "SUCCEEDED"
                    ]
                }
            },
            "BlobMetadata-VideoRaw": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "containerName": "@variables('containerName')",
                        "blobName": "@variables('blobName')"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "getBlobMetadata",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "runAfter": {
                    "InitializeVariable-BlobName": [
                        "SUCCEEDED"
                    ]
                }
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "EventGridTrigger": {
                "type": "ApiConnectionWebhook",
                "inputs": {
                    "host": {
                        "connection": {
                            "referenceName": "azureeventgrid"
                        }
                    },
                    "body": {
                        "properties": {
                            "topic": "@{concat('/subscriptions/',parameters('STORAGE_ACCOUNT_SUBSCRIPTION_ID'),'/resourceGroups/',parameters('STORAGE_ACCOUNT_RESOURCE_GROUP_NAME'),'/providers/Microsoft.Storage/storageAccounts/',parameters('STORAGE_ACCOUNT_NAME'))}",
                            "destination": {
                                "endpointType": "webhook",
                                "properties": {
                                    "endpointUrl": "@{listCallbackUrl()}"
                                }
                            },
                            "filter": {
                                "includedEventTypes": [
                                    "Microsoft.Storage.BlobCreated"
                                ],
                                "subjectBeginsWith": "@{concat('/blobServices/default/containers/',parameters('STORAGE_CONTAINER_NAME_UPLOAD_NEWS'),'/blobs/')}"
                            }
                        }
                    },
                    "path": "/subscriptions/@{encodeURIComponent(parameters('STORAGE_ACCOUNT_SUBSCRIPTION_ID'))}/providers/@{encodeURIComponent('Microsoft.Storage.StorageAccounts')}/resource/eventSubscriptions",
                    "queries": {
                        "x-ms-api-version": "2017-09-15-preview",
                        "subscriptionName": "newsSubscription"
                    }
                },
                "splitOn": "@triggerBody()"
            }
        }
    },
    "kind": "Stateful"
}