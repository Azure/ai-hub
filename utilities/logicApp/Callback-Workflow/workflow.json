{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Arm-VideoIndexerGenerateAccessToken-Request": {
                "type": "Http",
                "inputs": {
                    "uri": "@concat('https://management.azure.com',parameters('VIDEO_INDEXER_ID'),'/generateAccessToken?api-version=2024-01-01')",
                    "method": "POST",
                    "body": {
                        "permissionType": "Contributor",
                        "scope": "Account"
                    },
                    "authentication": {
                        "type": "ManagedServiceIdentity",
                        "audience": "https://management.core.windows.net"
                    }
                },
                "runAfter": {
                    "InitializeVariable-VideoId": [
                        "SUCCEEDED"
                    ]
                },
                "operationOptions": "DisableAsyncPattern",
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                }
            },
            "Arm-VideoIndexerGenerateAccessToken-Response": {
                "type": "ParseJson",
                "inputs": {
                    "content": "@body('Arm-VideoIndexerGenerateAccessToken-Request')",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "accessToken": {
                                "type": "string"
                            }
                        }
                    }
                },
                "runAfter": {
                    "Arm-VideoIndexerGenerateAccessToken-Request": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Videoindexer-GetVideoIndex": {
                "type": "ApiConnection",
                "inputs": {
                    "host": {
                        "connection": {
                            "referenceName": "videoindexer-v2"
                        }
                    },
                    "method": "get",
                    "path": "/@{encodeURIComponent(parameters('WORKFLOWS_LOCATION_NAME'))}/Accounts/@{encodeURIComponent(parameters('VIDEO_INDEXER_ACCOUNT_ID'))}/Videos/@{encodeURIComponent(variables('videoId'))}/Index",
                    "queries": {
                        "accessToken": "@body('Arm-VideoIndexerGenerateAccessToken-Response')?['accessToken']",
                        "language": "English"
                    }
                },
                "runAfter": {
                    "Arm-VideoIndexerGenerateAccessToken-Response": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Compose-VideoIndex": {
                "type": "Compose",
                "inputs": "@body('Videoindexer-GetVideoIndex')",
                "runAfter": {
                    "Videoindexer-GetVideoIndex": [
                        "SUCCEEDED"
                    ]
                }
            },
            "UploadBlob-VideoIndex": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "containerName": "@parameters('STORAGE_CONTAINER_NAME_CURATED')",
                        "blobName": "@concat(body('Videoindexer-GetVideoIndex')?['name'], '/videoindexer.json')",
                        "content": "@outputs('Compose-VideoIndex')",
                        "overrideIfExists": "true"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "uploadBlob",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "runAfter": {
                    "Compose-VideoIndex": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Videoindexer-CreatePromptContent-Request": {
                "type": "Http",
                "inputs": {
                    "uri": "@concat('https://api.videoindexer.ai/' , parameters('WORKFLOWS_LOCATION_NAME'), '/Accounts/',parameters('VIDEO_INDEXER_ACCOUNT_ID'),'/Videos/',variables('videoId'),'/PromptContent')",
                    "method": "POST",
                    "queries": {
                        "accessToken": "@{body('Arm-VideoIndexerGenerateAccessToken-Response')?['accessToken']}"
                    }
                },
                "runAfter": {
                    "Videoindexer-GetVideoIndex": [
                        "SUCCEEDED"
                    ]
                },
                "operationOptions": "DisableAsyncPattern",
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                }
            },
            "Until": {
                "type": "Until",
                "expression": "@equals(variables('statusCode'),200)",
                "limit": {
                    "count": 60,
                    "timeout": "PT1H"
                },
                "actions": {
                    "Delay": {
                        "type": "Wait",
                        "inputs": {
                            "interval": {
                                "count": 30,
                                "unit": "Second"
                            }
                        }
                    },
                    "Videoindexer-GetPromptContent-Request": {
                        "type": "Http",
                        "inputs": {
                            "uri": "@concat('https://api.videoindexer.ai/' , parameters('WORKFLOWS_LOCATION_NAME'), '/Accounts/',parameters('VIDEO_INDEXER_ACCOUNT_ID'),'/Videos/',variables('videoId'),'/PromptContent')",
                            "method": "GET",
                            "queries": {
                                "accessToken": "@{body('Arm-VideoIndexerGenerateAccessToken-Response')?['accessToken']}"
                            }
                        },
                        "runAfter": {
                            "Delay": [
                                "SUCCEEDED"
                            ]
                        },
                        "operationOptions": "DisableAsyncPattern",
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            }
                        }
                    },
                    "SetVariable-StatusCode": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "statusCode",
                            "value": "@outputs('Videoindexer-GetPromptContent-Request')?['statusCode']"
                        },
                        "runAfter": {
                            "Videoindexer-GetPromptContent-Response": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Videoindexer-GetPromptContent-Response": {
                        "type": "ParseJson",
                        "inputs": {
                            "content": "@body('Videoindexer-GetPromptContent-Request')",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "partition": {},
                                    "name": {
                                        "type": "string"
                                    },
                                    "sections": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "start": {
                                                    "type": "string"
                                                },
                                                "end": {
                                                    "type": "string"
                                                },
                                                "content": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "start",
                                                "end",
                                                "content"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "runAfter": {
                            "Videoindexer-GetPromptContent-Request": [
                                "SUCCEEDED"
                            ]
                        }
                    }
                },
                "runAfter": {
                    "InitializeVariable-StatusCode": [
                        "SUCCEEDED"
                    ]
                }
            },
            "InitializeVariable-StatusCode": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "statusCode",
                            "type": "integer",
                            "value": 0
                        }
                    ]
                },
                "runAfter": {
                    "Videoindexer-CreatePromptContent-Request": [
                        "SUCCEEDED"
                    ]
                }
            },
            "UploadBlob-PromptContent": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "containerName": "@parameters('STORAGE_CONTAINER_NAME_CURATED')",
                        "blobName": "@concat(body('Videoindexer-GetVideoIndex')?['name'], '/promptcontent.json')",
                        "content": "@body('Videoindexer-GetPromptContent-Request')",
                        "overrideIfExists": "true"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "uploadBlob",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "runAfter": {
                    "Until": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Videoindexer-GetArtifactUrl-Request": {
                "type": "Http",
                "inputs": {
                    "uri": "@concat('https://api.videoindexer.ai/' , parameters('WORKFLOWS_LOCATION_NAME'), '/Accounts/',parameters('VIDEO_INDEXER_ACCOUNT_ID'),'/Videos/',variables('videoId'),'/ArtifactUrl')",
                    "method": "GET",
                    "queries": {
                        "accessToken": "@{body('Arm-VideoIndexerGenerateAccessToken-Response')?['accessToken']}",
                        "type": "KeyframesThumbnails"
                    }
                },
                "runAfter": {
                    "Videoindexer-GetVideoIndex": [
                        "SUCCEEDED"
                    ]
                },
                "operationOptions": "DisableAsyncPattern",
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                }
            },
            "Videoindexer-GetArtifact-Request": {
                "type": "Http",
                "inputs": {
                    "uri": "@body('Videoindexer-GetArtifactUrl-Request')",
                    "method": "GET"
                },
                "runAfter": {
                    "Videoindexer-GetArtifactUrl-Request": [
                        "SUCCEEDED"
                    ]
                },
                "operationOptions": "DisableAsyncPattern",
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                }
            },
            "UploadBlob-Artifact": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "containerName": "@parameters('STORAGE_CONTAINER_NAME_CURATED')",
                        "blobName": "@concat(body('Videoindexer-GetVideoIndex')?['name'], '/artifact.json')",
                        "content": "@body('Videoindexer-GetArtifact-Request')",
                        "overrideIfExists": "true"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "uploadBlob",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "runAfter": {
                    "Videoindexer-GetArtifact-Request": [
                        "SUCCEEDED"
                    ]
                }
            },
            "InitializeVariable-VideoId": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "videoId",
                            "type": "string",
                            "value": "@{triggerOutputs()?['queries']['id']}"
                        }
                    ]
                },
                "runAfter": {}
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "HTTPTrigger": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                    "schema": {
                        "type": "object",
                        "properties": {}
                    }
                }
            }
        }
    },
    "kind": "Stateful"
}