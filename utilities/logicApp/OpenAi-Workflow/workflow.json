{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Compose-BlobContent": {
                "inputs": "@base64ToString(triggerBody()?['content']['$content'])",
                "runAfter": {},
                "type": "Compose"
            },
            "Compose-Transcript": {
                "inputs": "@variables('transcript')",
                "runAfter": {
                    "ForEach-Section": [
                        "SUCCEEDED"
                    ]
                },
                "type": "Compose"
            },
            "ForEach-Section": {
                "actions": {
                    "AppendToArrayVariable-Transcript": {
                        "inputs": {
                            "name": "transcript",
                            "value": "@outputs('Compose-Scene')"
                        },
                        "runAfter": {
                            "Compose-Scene": [
                                "SUCCEEDED"
                            ]
                        },
                        "type": "AppendToArrayVariable"
                    },
                    "Compose-Scene": {
                        "inputs": {
                            "content": "@{body('HtmlToText-Scene')}",
                            "role": "user"
                        },
                        "runAfter": {
                            "HtmlToText-Scene": [
                                "SUCCEEDED"
                            ]
                        },
                        "type": "Compose"
                    },
                    "HtmlToText-Scene": {
                        "inputs": {
                            "body": "<p>@{items('ForEach-Section')}</p>",
                            "host": {
                                "connection": {
                                    "referenceName": "conversionservice"
                                }
                            },
                            "method": "post",
                            "path": "/html2text"
                        },
                        "type": "ApiConnection"
                    }
                },
                "foreach": "@body('HtmlToText-BlobContent-Response')?['sections']",
                "runAfter": {
                    "InitializeVariable-Transcipt": [
                        "SUCCEEDED"
                    ]
                },
                "type": "Foreach"
            },
            "FunctionShortClip-VideoExtraction-Request": {
                "inputs": {
                    "body": {
                        "orchestrator_workflow_name": "video_extraction_orchestrator",
                        "orchestrator_workflow_properties": {
                            "content_url_openai": "@{concat(parameters('AZURE_BLOB_STORAGE_ENDPOINT'), body('UploadBlob-Assisstant')?['properties']?['blobFullPathWithContainer'])}",
                            "content_url_video": "@{concat(parameters('AZURE_BLOB_STORAGE_ENDPOINT'), triggerBody()?['name'])}"
                        }
                    },
                    "method": "POST",
                    "uri": "@concat(parameters('FUNCTION_SHORTCLIP_HOSTNAME'), 'api/startWorkflow?code=', parameters('FUNCTION_SHORTCLIP_KEY'))"
                },
                "runAfter": {
                    "UploadBlob-Assisstant": [
                        "SUCCEEDED"
                    ]
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                },
                "type": "Http"
            },
            "HtmlToText-BlobContent": {
                "inputs": {
                    "body": "<p>@{outputs('Compose-BlobContent')}</p>",
                    "host": {
                        "connection": {
                            "referenceName": "conversionservice"
                        }
                    },
                    "method": "post",
                    "path": "/html2text"
                },
                "runAfter": {
                    "Compose-BlobContent": [
                        "SUCCEEDED"
                    ]
                },
                "type": "ApiConnection"
            },
            "HtmlToText-BlobContent-Response": {
                "inputs": {
                    "content": "@body('HtmlToText-BlobContent')",
                    "schema": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "partition": {},
                            "sections": {
                                "items": {
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        },
                                        "end": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "integer"
                                        },
                                        "start": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "start",
                                        "end",
                                        "content"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "HtmlToText-BlobContent": [
                        "SUCCEEDED"
                    ]
                },
                "type": "ParseJson"
            },
            "InitializeVariable-RunStatus": {
                "inputs": {
                    "variables": [
                        {
                            "name": "runStatus",
                            "type": "string",
                            "value": "Unknown"
                        }
                    ]
                },
                "runAfter": {
                    "OpenAi-CreateRun-Response": [
                        "SUCCEEDED"
                    ]
                },
                "type": "InitializeVariable"
            },
            "InitializeVariable-Transcipt": {
                "inputs": {
                    "variables": [
                        {
                            "name": "transcript",
                            "type": "array"
                        }
                    ]
                },
                "runAfter": {
                    "HtmlToText-BlobContent-Response": [
                        "SUCCEEDED"
                    ]
                },
                "type": "InitializeVariable"
            },
            "OpenAi-CreateAssisstant-Request": {
                "inputs": {
                    "authentication": {
                        "audience": "https://cognitiveservices.azure.com",
                        "type": "ManagedServiceIdentity"
                    },
                    "body": {
                        "instructions": "@{parameters('META_PROMPT')}",
                        "model": "@{parameters('AZURE_OPENAI_DEPLOYMENT_NAME')}",
                        "name": "@{concat(parameters('ASSISSTANT_NAME'), workflow()['id'])}"
                    },
                    "method": "POST",
                    "uri": "@concat(parameters('AZURE_OPENAI_ENDPOINT'),'/openai/assistants?api-version=2024-03-01-preview')"
                },
                "runAfter": {
                    "Compose-Transcript": [
                        "SUCCEEDED"
                    ]
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                },
                "type": "Http"
            },
            "OpenAi-CreateAssisstant-Response": {
                "inputs": {
                    "content": "@body('OpenAi-CreateAssisstant-Request')",
                    "schema": {
                        "properties": {
                            "created_at": {
                                "type": "integer"
                            },
                            "description": {},
                            "file_ids": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "id": {
                                "type": "string"
                            },
                            "instructions": {
                                "type": "string"
                            },
                            "metadata": {
                                "properties": {},
                                "type": "object"
                            },
                            "model": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "object": {
                                "type": "string"
                            },
                            "tools": {
                                "items": {
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "OpenAi-CreateAssisstant-Request": [
                        "SUCCEEDED"
                    ]
                },
                "type": "ParseJson"
            },
            "OpenAi-CreateRun-Request": {
                "inputs": {
                    "authentication": {
                        "audience": "https://cognitiveservices.azure.com",
                        "type": "ManagedServiceIdentity"
                    },
                    "body": {
                        "assistant_id": "@{body('OpenAi-CreateAssisstant-Response')?['id']}",
                        "thread": {
                            "messages": "@outputs('Compose-Transcript')"
                        }
                    },
                    "method": "POST",
                    "uri": "@concat(parameters('AZURE_OPENAI_ENDPOINT'),'/openai/threads/runs?api-version=2024-03-01-preview')"
                },
                "runAfter": {
                    "OpenAi-CreateAssisstant-Response": [
                        "SUCCEEDED"
                    ]
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                },
                "type": "Http"
            },
            "OpenAi-CreateRun-Response": {
                "inputs": {
                    "content": "@body('OpenAi-CreateRun-Request')",
                    "schema": {
                        "properties": {
                            "assistant_id": {
                                "type": "string"
                            },
                            "cancelled_at": {},
                            "completed_at": {},
                            "created_at": {
                                "type": "integer"
                            },
                            "expires_at": {
                                "type": "integer"
                            },
                            "failed_at": {},
                            "file_ids": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "id": {
                                "type": "string"
                            },
                            "instructions": {
                                "type": "string"
                            },
                            "last_error": {},
                            "metadata": {
                                "properties": {},
                                "type": "object"
                            },
                            "model": {
                                "type": "string"
                            },
                            "object": {
                                "type": "string"
                            },
                            "required_action": {},
                            "started_at": {},
                            "status": {
                                "type": "string"
                            },
                            "temperature": {
                                "type": "integer"
                            },
                            "thread_id": {
                                "type": "string"
                            },
                            "tools": {
                                "items": {
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "usage": {}
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "OpenAi-CreateRun-Request": [
                        "SUCCEEDED"
                    ]
                },
                "type": "ParseJson"
            },
            "OpenAi-GetMessages-Request": {
                "inputs": {
                    "authentication": {
                        "audience": "https://cognitiveservices.azure.com",
                        "type": "ManagedServiceIdentity"
                    },
                    "method": "GET",
                    "uri": "@concat(parameters('AZURE_OPENAI_ENDPOINT'),'/openai/threads/',body('OpenAi-CreateRun-Response')?['thread_id'],'/messages?api-version=2024-02-15-preview')"
                },
                "runAfter": {
                    "Until": [
                        "SUCCEEDED"
                    ]
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                },
                "type": "Http"
            },
            "OpenAi-GetMessages-Response": {
                "inputs": {
                    "content": "@body('OpenAi-GetMessages-Request')",
                    "schema": {
                        "properties": {
                            "data": {
                                "items": {
                                    "properties": {
                                        "assistant_id": {},
                                        "content": {
                                            "items": {
                                                "properties": {
                                                    "text": {
                                                        "properties": {
                                                            "annotations": {
                                                                "type": "array"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "text"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "created_at": {
                                            "type": "integer"
                                        },
                                        "file_ids": {
                                            "type": "array"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "metadata": {
                                            "properties": {},
                                            "type": "object"
                                        },
                                        "object": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string"
                                        },
                                        "run_id": {},
                                        "thread_id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "object",
                                        "created_at",
                                        "assistant_id",
                                        "thread_id",
                                        "run_id",
                                        "role",
                                        "content",
                                        "file_ids",
                                        "metadata"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "first_id": {
                                "type": "string"
                            },
                            "has_more": {
                                "type": "boolean"
                            },
                            "last_id": {
                                "type": "string"
                            },
                            "object": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "OpenAi-GetMessages-Request": [
                        "SUCCEEDED"
                    ]
                },
                "type": "ParseJson"
            },
            "Until": {
                "actions": {
                    "Delay": {
                        "inputs": {
                            "interval": {
                                "count": 30,
                                "unit": "Second"
                            }
                        },
                        "runAfter": {
                            "SetVariable-RunStatus": [
                                "SUCCEEDED"
                            ]
                        },
                        "type": "Wait"
                    },
                    "OpenAi-GetRun-Request": {
                        "inputs": {
                            "authentication": {
                                "audience": "https://cognitiveservices.azure.com",
                                "type": "ManagedServiceIdentity"
                            },
                            "method": "GET",
                            "uri": "@concat(parameters('AZURE_OPENAI_ENDPOINT'),'/openai/threads/',body('OpenAi-CreateRun-Response')?['thread_id'],'/runs/',body('OpenAi-CreateRun-Response')?['id'],'?api-version=2024-02-15-preview')"
                        },
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            }
                        },
                        "type": "Http"
                    },
                    "OpenAi-GetRun-Response": {
                        "inputs": {
                            "content": "@body('OpenAi-GetRun-Request')",
                            "schema": {
                                "properties": {
                                    "properties": {
                                        "properties": {
                                            "assistant_id": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "cancelled_at": {
                                                "properties": {},
                                                "type": "object"
                                            },
                                            "completed_at": {
                                                "properties": {},
                                                "type": "object"
                                            },
                                            "created_at": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "expires_at": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "failed_at": {
                                                "properties": {},
                                                "type": "object"
                                            },
                                            "file_ids": {
                                                "properties": {
                                                    "items": {
                                                        "properties": {
                                                            "type": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "id": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "instructions": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "last_error": {
                                                "properties": {},
                                                "type": "object"
                                            },
                                            "metadata": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "model": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "object": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "required_action": {
                                                "properties": {},
                                                "type": "object"
                                            },
                                            "started_at": {
                                                "properties": {},
                                                "type": "object"
                                            },
                                            "status": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "temperature": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "thread_id": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tools": {
                                                "properties": {
                                                    "items": {
                                                        "properties": {
                                                            "properties": {
                                                                "properties": {
                                                                    "type": {
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "required": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "usage": {
                                                "properties": {},
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "runAfter": {
                            "OpenAi-GetRun-Request": [
                                "SUCCEEDED"
                            ]
                        },
                        "type": "ParseJson"
                    },
                    "SetVariable-RunStatus": {
                        "inputs": {
                            "name": "runStatus",
                            "value": "@{body('OpenAi-GetRun-Response')?['properties']?['status']}"
                        },
                        "runAfter": {
                            "OpenAi-GetRun-Response": [
                                "SUCCEEDED"
                            ]
                        },
                        "type": "SetVariable"
                    }
                },
                "expression": "@equals(variables('runStatus'),'completed')",
                "limit": {
                    "count": 10,
                    "timeout": "PT1H"
                },
                "runAfter": {
                    "InitializeVariable-RunStatus": [
                        "SUCCEEDED"
                    ]
                },
                "type": "Until"
            },
            "UploadBlob-Assisstant": {
                "inputs": {
                    "parameters": {
                        "blobName": "assisstant.json",
                        "containerName": "@concat(parameters('STORAGE_CONTAINER_NAME_RAW'), '/', workflow()['id'])",
                        "content": "@body('OpenAi-GetMessages-Response')?['data'][0]['content'][0]['text']['value']"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "uploadBlob",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "runAfter": {
                    "OpenAi-GetMessages-Response": [
                        "SUCCEEDED"
                    ]
                },
                "type": "ServiceProvider"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "BlobTrigger": {
                "inputs": {
                    "parameters": {
                        "path": "@parameters('STORAGE_CONTAINER_NAME_RAW')"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "whenABlobIsAddedOrModified",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "type": "ServiceProvider"
            }
        }
    },
    "kind": "Stateful"
}