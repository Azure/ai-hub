{
    "$schema": "https://schema.management.azure.com/schemas/2021-09-09/uiFormDefinition.schema.json#",
    "view": {
        "kind": "Form",
        "properties": {
            "title": "Enterprise Azure OpenAI Hub",
            "steps": [
                {
                    "name": "basics",
                    "label": "Architecture setup",
                    "elements": [
                        {
                            "name": "info",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": true,
                            "options": {
                                "text": "To deploy Enterprise Azure OpenAI Hub with Terraform, visit the following link to get started",
                                "uri": "https://github.com/Azure/ai-hub/blob/main/infrastructure/terraform/README.md#enterprise-azure-openai-hub---terraform-setup",
                                "style": "Info"
                            }
                        },
                        {
                            "name": "aiIntentionText",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": true,
                            "options": {
                                "text": "Select the architecture setup for the Enterprise Azure OpenAI Hub. You can select if you want to deploy a single hub into a single region, or create multiple hubs across multiple regions using API Management for load balancing and distribution of traffic.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://learn.microsoft.com/azure/ai-services/openai/overview"
                                }
                            }
                        },
                        {
                            "name": "aiDeployOption",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Intent of deployment",
                            "placeholder": "",
                            "defaultValue": "Production",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the intent for this deployment.",
                            "filter": false,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Production",
                                        "description": "Deploy Enterprise Azure OpenAI Hub into a production environment.",
                                        "value": "Production"
                                    },
                                    {
                                        "label": "Proof of Concept",
                                        "description": "This option will allow you to enable Preview features such as multi-region setup and deploy sample applications if you want to start with a Use Case.",
                                        "value": "PoC"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "aiIntention",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Regional setup",
                            "placeholder": "",
                            "defaultValue": "Deploy to a single Azure region",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the architecture for this deployment.",
                            "filter": false,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Deploy to a single Azure region",
                                        "description": "Deploy Enterprise Azure OpenAI Hub with optional services into a single Azure region.",
                                        "value": "Single"
                                    },
                                    {
                                        "label": "Deploy to multiple Azure regions",
                                        "description": "Deploy Enterprise Azure OpenAI Hub across multiple Azure regions, using APIM for load balancing with retry and error handling.",
                                        "value": "Multiple"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('basics').aiDeployOption, 'PoC')]"
                        },
                        {
                            "name": "aiPoCMultiRegionInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[equals(steps('basics').aiIntention, 'Multiple')]",
                            "options": {
                                "icon": "warning",
                                "text": "For Enterprise Azure OpenAI Hub in a multi-region setup, all Azure services will be configured using Public Endpoints. Private Endpoint support for both PoC and Production deployment will be enabled soon."
                            }
                        },
                        {
                            "name": "aoAiMulti",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[equals(steps('basics').aiIntention, 'Multiple')]",
                            "options": {
                                "icon": "None",
                                "text": "<b> </b><img src='https://raw.githubusercontent.com/Azure/ai-hub/main/docs/EAOAIHubMulti.svg'>"
                            }
                        },
                        {
                            "name": "aoAiSingle",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[equals(steps('basics').aiIntention, 'Single')]",
                            "options": {
                                "icon": "None",
                                "text": "<b> </b><img src='https://raw.githubusercontent.com/Azure/ai-hub/main/docs/EAOAIHubSingle.svg'>"
                            }
                        },
                        {
                            "name": "aiProdMultiRegionInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[equals(steps('basics').aiDeployOption, 'Production')]",
                            "options": {
                                "icon": "warning",
                                "text": "Currently Enterprise Azure OpenAI Hub can only be deployed to a single Azure region supporting Private Endpoints. Support for multi-region setup with Private Endpoints will be enabled soon. To deploy to multiple Azure regions using Public Endpoints, select 'Proof of Concept' option in the drop down."
                            }
                        },
                        {
                            "name": "aoAiProd",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[equals(steps('basics').aiDeployOption, 'Production')]",
                            "options": {
                                "icon": "None",
                                "text": "<b> </b><img src='https://raw.githubusercontent.com/Azure/ai-hub/main/docs/EAOAIHubSingle.svg'>"
                            }
                        },
                        {
                            "name": "aiMultiLocationsApi",
                            "type": "Microsoft.Solutions.ArmApiControl",
                            "request": {
                                "method": "GET",
                                "path": "locations?api-version=2019-11-01"
                            }
                        },
                        {
                            "name": "resourceScope",
                            "type": "Microsoft.Common.ResourceScope",
                            "location": {
                                "resourceTypes": []
                            }
                        },
                        {
                            "name": "prefix",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Enterprise Azure OpenAI Hub Prefix",
                            "placeholder": "",
                            "defaultValue": "",
                            "toolTip": "Use only allowed characters",
                            "constraints": {
                                "required": true,
                                "regex": "^[a-z0-9A-Z-]{1,10}$",
                                "validationMessage": "The prefix must be 1-10 characters."
                            },
                            "visible": true
                        },
                        {
                            "name": "aiMultiLocation",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Select the additional Azure region for the Enterprise Azure OpenAI Hub",
                            "filter": true,
                            "toolTip": "Select the additional Azure region for the Enterprise Azure OpenAI Hub",
                            "constraints": {
                                "allowedValues": "[map(steps('basics').aiMultiLocationsApi.value,(item) => parse(concat('{\"label\":\"',item.displayName,'\",\"value\":\"',item.name,'\"}')))]",
                                "required": true
                            },
                            "visible": "[equals(steps('basics').aiIntention, 'Multiple')]"
                        },
                        {
                            "name": "apimLocation",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Select the Azure region for the API Management (V2 Preview)",
                            "placeholder": "",
                            "defaultValue": "",
                            "toolTip": "Select the supported Azure region for the API Management (V2 Preview) service that will be created.",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "filter": false,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "East US",
                                        "value": "eastus"
                                    },
                                    {
                                        "label": "West US",
                                        "value": "westus"
                                    },
                                    {
                                        "label": "France Central",
                                        "value": "francecentral"
                                    },
                                    {
                                        "label": "North Europe",
                                        "value": "northeurope"
                                    },
                                    {
                                        "label": "West Europe",
                                        "value": "westeurope"
                                    },
                                    {
                                        "label": "UK South",
                                        "value": "uksouth"
                                    },
                                    {
                                        "label": "Brazil South",
                                        "value": "brazilsouth"
                                    },
                                    {
                                        "label": "Australia East",
                                        "value": "australiaeast"
                                    },
                                    {
                                        "label": "Australia Southeast",
                                        "value": "australiasoutheast"
                                    },
                                    {
                                        "label": "East Asia",
                                        "value": "eastasia"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('basics').aiIntention, 'Multiple')]"
                        }
                    ]
                },
                {
                    "name": "kvSettings",
                    "label": "Key Vault Configuration",
                    "subLabel": {
                        "preValidation": "",
                        "postValidation": "Done"
                    },
                    "bladeTitle": "Kv settings",
                    "elements": [
                        {
                            "name": "kvInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": true,
                            "options": {
                                "icon": "None",
                                "text": "Centralizing storage of application secrets in Azure Key Vault allows you to control their distribution. Key Vault greatly reduces the chances that secrets may be accidentally leaked. When application developers use Key Vault, they no longer need to store security information in their application. Use Azure Key Vault to enable Customer-Managed keys scenarios for Azure OpenAI workload compositions",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://www.microsoft.com"
                                }
                            }
                        },
                        {
                            "name": "kvDeleteSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Deletion and Purge Protection Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "kvSoftDelete",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Soft Delete",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "kvSoftDeleteRetention",
                            "type": "Microsoft.Common.Slider",
                            "min": 7,
                            "max": 90,
                            "label": "Soft Delete Retention (in days)",
                            "subLabel": "Days",
                            "defaultValue": 7,
                            "showStepMarkers": false,
                            "toolTip": "Select soft delete retention days for Key Vaults. Default is 30 days.",
                            "constraints": {
                                "required": false
                            },
                            "visible": "[equals(steps('kvSettings').kvSoftDelete, 'Yes')]"
                        },
                        {
                            "name": "kvPurgeProtection",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Purge Protection",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "authzSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Authorization Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "kvRbacAuthz",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Azure RBAC authorization",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No, use local authorization with Vault access policies",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "kvMonSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Monitor Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "kvMonCreation",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Diagnostic Settings for logging and threat detection",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "nwSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Network Settings",
                            "elements": [],
                            "visible": "[not(equals(steps('basics').aiIntention, 'Multiple'))]"
                        },
                        {
                            "name": "kvDisableNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Disable Public Network Access",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[not(equals(steps('basics').aiIntention, 'Multiple'))]"
                        },
                        {
                            "name": "kvNetworkingInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('kvSettings').kvDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "The VNet and subnet you select can be in a different Azure region then the Private Endpoint for Key Vault. Ensure you have connectivity to the other services you are creating."
                            }
                        },
                        {
							"name": "vnetSelector",
							"type": "Microsoft.Solutions.ResourceSelector",
							"label": "Select an existing Virtual Network",
							"resourceType": "Microsoft.Network/virtualNetworks",
							"options": {
								"filter": {
									"subscription": "onBasics",
									"location": "all"
								}
							},
                            "visible": "[and(equals(steps('kvSettings').kvDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
						{
							"name": "subnets",
							"type": "Microsoft.Solutions.ArmApiControl",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('kvSettings').vnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('kvSettings').vnetSelector.name,'/subnets?api-version=2022-01-01')]"
							}
						},
						{
							"name": "subnetList",
							"type": "Microsoft.Common.DropDown",
							"label": "Select an existing Subnet",
							"filter": true,
							"constraints": {
								"allowedValues": "[map(steps('kvSettings').subnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]",
								"required": true
							},
                            "visible": "[and(equals(steps('kvSettings').kvDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
                        {  
                            "name": "selectedVnetDetails",  
                            "type": "Microsoft.Solutions.ArmApiControl",  
                            "request": {  
                                "method": "GET",  
                                "path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('kvSettings').vnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('kvSettings').vnetSelector.name, '?api-version=2022-01-01')]"  
                            }  
                        },
                        {
                            "name": "kvNetworkingRegionOutputInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('kvSettings').kvDisableNetworkAccess, 'Yes'), not(equals(steps('kvSettings').selectedVnetDetails.location, steps('basics').resourceScope.location.name)), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "Note you are creating the Private Endpoint into a different Azure Region then the Key Vault. Ensure you have connectivity with the other Azure services you are creating in case their Private Endpoints are in different regions and Virtual Networks"
                            }
                        },
                        {
                            "name": "kvCmkSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Customer-Managed Key Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "kvKeyCreation",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Use Customer-Managed Keys to encrypt data for the Azure services",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        }
                    ]
                },
                {
                    "name": "stSettings",
                    "label": "Storage Configuration",
                    "subLabel": {
                        "preValidation": "",
                        "postValidation": "Done"
                    },
                    "bladeTitle": "St settings",
                    "elements": [
                        {
                            "name": "stInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": true,
                            "options": {
                                "icon": "None",
                                "text": "Bring your own storage that you can use to train Azure OpenAI on internal, highly confidential data fully encrypted by Customer-Managed Keys.",
                                "uri": "https://www.microsoft.com"
                            }
                        },
                        {
                            "name": "stEncryptionSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Encryption in transit and at rest Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "stHttpsOnly",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enforce HTTPS only",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "stCmkKeyName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Customer-Managed Key Name",
                            "placeholder": "",
                            "defaultValue": "CmkStorage",
                            "toolTip": "Use only allowed characters",
                            "constraints": {
                                "required": true,
                                "regex": "^[a-z0-9A-Z-]{1,15}$",
                                "validationMessage": "Only alphanumeric characters are allowed, and the value must be 1-15 characters long."
                            },
                            "visible": "[equals(steps('kvSettings').kvKeyCreation, 'Yes')]"
                        },
                        {
                            "name": "networkSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Network Settings",
                            "elements": [],
                            "visible": "[not(equals(steps('basics').aiIntention, 'Multiple'))]"
                        },
                        {
                            "name": "stDisableNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Disable Public Network Access",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[not(equals(steps('basics').aiIntention, 'Multiple'))]"
                        },
                        {
                            "name": "stNetworkingInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('stSettings').stDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "The VNet and subnet you select can be in a different Azure region then the Private Endpoint for Storage Account. Ensure you have connectivity to the other services you are creating."
                            }
                        },
						{
							"name": "vnetSelector",
							"type": "Microsoft.Solutions.ResourceSelector",
							"label": "Select an existing Virtual Network",
							"resourceType": "Microsoft.Network/virtualNetworks",
							"options": {
								"filter": {
									"subscription": "onBasics",
									"location": "all"
								}
							},
                            "visible": "[and(equals(steps('stSettings').stDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
						{
							"name": "subnets",
							"type": "Microsoft.Solutions.ArmApiControl",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('stSettings').vnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('stSettings').vnetSelector.name,'/subnets?api-version=2022-01-01')]"
							}
						},
						{
							"name": "subnetList",
							"type": "Microsoft.Common.DropDown",
							"label": "Select an existing Subnet",
							"filter": true,
							"constraints": {
								"allowedValues": "[map(steps('stSettings').subnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]",
								"required": true
							},
                            "visible": "[and(equals(steps('stSettings').stDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
                        {  
                            "name": "selectedVnetDetails",  
                            "type": "Microsoft.Solutions.ArmApiControl",  
                            "request": {  
                                "method": "GET",  
                                "path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('stSettings').vnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('stSettings').vnetSelector.name, '?api-version=2022-01-01')]"  
                            }  
                        },
                        {
                            "name": "stNetworkingRegionOutputInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('stSettings').stDisableNetworkAccess, 'Yes'), not(equals(steps('stSettings').selectedVnetDetails.location, steps('basics').resourceScope.location.name)), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "Note you are creating the Private Endpoint into a different Azure Region then the Storage Account. Ensure you have connectivity with the other Azure services you are creating in case their Private Endpoints are in different regions and Virtual Networks"
                            }
                        },
                        {
                            "name": "authzSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Authorization Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "stRbacAuthz",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Azure RBAC authorization",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No, use Shared Key authorization/SAS",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "stMonSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Monitor Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "stMonCreation",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Diagnostic Settings for logging and threat detection",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        }
                    ]
                },
                {
                    "name": "aiSettings",
                    "label": "Azure OpenAI Configuration",
                    "subLabel": {
                        "preValidation": "",
                        "postValidation": "Done"
                    },
                    "bladeTitle": "ai settings",
                    "elements": [
                        {
                            "name": "aiInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": true,
                            "options": {
                                "icon": "None",
                                "text": "Azure OpenAI Service provides REST API access to OpenAI's powerful language models including the GPT-4, GPT-35-Turbo, and Embeddings model series. In addition, the new GPT-4 and gpt-35-turbo model series have now reached general availability. These models can be easily adapted to your specific task including but not limited to content generation, summarization, semantic search, and natural language to code translation. Users can access the service through REST APIs, Python SDK, or our web-based interface in the Azure OpenAI Studio.",
                                "uri": "https://www.microsoft.com"
                            }
                        },
                        {
                            "name": "aiEncryptionSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Encryption in transit and at rest Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "aiCmkKeyName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Customer-Managed Key Name",
                            "placeholder": "",
                            "defaultValue": "CmkAOAI",
                            "toolTip": "Use only allowed characters",
                            "constraints": {
                                "required": true,
                                "regex": "^[a-z0-9A-Z-]{1,15}$",
                                "validationMessage": "Only alphanumeric characters are allowed, and the value must be 1-15 characters long."
                            },
                            "visible": "[equals(steps('kvSettings').kvKeyCreation, 'Yes')]"
                        },
                        {
                            "name": "networkSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Network Settings",
                            "elements": [],
                            "visible": "[not(equals(steps('basics').aiIntention, 'Multiple'))]"
                        },
                        {
                            "name": "aiDisableNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Disable Public Network Access",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[not(equals(steps('basics').aiIntention, 'Multiple'))]"
                        },
                        {
                            "name": "aiRestrictOutboundNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Restric Outbound Network Access for Azure OpenAI",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiSettings').aiDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "aiNetworkingInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiSettings').aiDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "The VNet and subnet you select can be in a different Azure region then the Private Endpoint for Azure OpenAI service. Ensure you have connectivity to the other services you are creating."
                            }
                        },
						{
							"name": "vnetSelector",
							"type": "Microsoft.Solutions.ResourceSelector",
							"label": "Select an existing Virtual Network",
							"resourceType": "Microsoft.Network/virtualNetworks",
							"options": {
								"filter": {
									"subscription": "onBasics",
									"location": "all"
								}
							},
                            "visible": "[and(equals(steps('aiSettings').aiDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
						{
							"name": "subnets",
							"type": "Microsoft.Solutions.ArmApiControl",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiSettings').vnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiSettings').vnetSelector.name,'/subnets?api-version=2022-01-01')]"
							}
						},
						{
							"name": "subnetList",
							"type": "Microsoft.Common.DropDown",
							"label": "Select an existing Subnet",
							"filter": true,
							"constraints": {
								"allowedValues": "[map(steps('aiSettings').subnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]",
								"required": true
							},
                            "visible": "[and(equals(steps('aiSettings').aiDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
                        {  
                            "name": "selectedVnetDetails",  
                            "type": "Microsoft.Solutions.ArmApiControl",  
                            "request": {  
                                "method": "GET",  
                                "path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiSettings').vnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiSettings').vnetSelector.name, '?api-version=2022-01-01')]"  
                            }  
                        },
                        {
                            "name": "aiNetworkingRegionOutputInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiSettings').aiDisableNetworkAccess, 'Yes'), not(equals(steps('aiSettings').selectedVnetDetails.location, steps('basics').resourceScope.location.name)), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "Note you are creating the Private Endpoint into a different Azure Region then the Azure OpenAI service. Ensure you have connectivity with the other Azure services you are creating in case their Private Endpoints are in different regions and Virtual Networks"
                            }
                        },
                        {
                            "name": "authzSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Authorization Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "aiRbacAuthz",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Azure RBAC authorization",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No, use local authorization with API key",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "aiSystemIdentity",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Managed Identity (System-assigned) for Azure OpenAI",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "When enabling Managed Identity and usage of Customer-Managed keys, this identity will have RBAC permission to retrieve the associated Key Vault secret.",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "aiMonSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Monitor Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "aiMonCreation",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Diagnostic Settings for logging and threat detection",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        }
                    ]
                },
                {
                    "name": "aiModelSettings",
                    "label": "Model Deployment and Content Filters",
                    "subLabel": {
                        "preValidation": "",
                        "postValidation": "Done"
                    },
                    "bladeTitle": "Model settings",
                    "elements": [
                        {
                            "name": "aiInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": true,
                            "options": {
                                "icon": "None",
                                "text": "Deployments provide endpoints to the Azure OpenAI base models, or your fine-tuned models, configured with settings to meet your needs, including the content moderation model, version handling, and deployment size. From this page, you can create new deployments.",
                                "uri": "https://www.microsoft.com"
                            }
                        },
                        {
                            "name": "aiModelSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Model Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "aiModelText",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": true,
                            "options": {
                                "text": "Azure OpenAI Service is powered by a diverse set of models with different capabilities and price points. Model availability varies by region.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://learn.microsoft.com/azure/ai-services/openai/concepts/legacy-models"
                                }
                            }
                        },
                        {
                            "name": "aiModelDeployment",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Create Model Deployments",
                            "defaultValue": "Yes",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "aiModelDeploymentName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Deployment Name",
                            "placeholder": "",
                            "defaultValue": "",
                            "toolTip": "Use only allowed characters",
                            "constraints": {
                                "required": true,
                                "regex": "^[a-z0-9A-Z-]{1,10}$",
                                "validationMessage": "Only alphanumeric characters are allowed, and the value must be 1-10 characters long."
                            },
                            "visible": "[equals(steps('aiModelSettings').aiModelDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiModelVersion",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Select the Model you want to deploy",
                            "placeholder": "",
                            "defaultValue": "GPT-4",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the models you want to deploy to you Azure OpenAI service",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "GPT-4o",
                                        "description": "Use the latest multi-modal model from GPT with support for images, text, speach, and video. GPT-4o is a large multimodal model (LMM) developed by OpenAI that can analyze images and provide textual responses to questions about them. It incorporates both natural language processing and visual understanding. The GPT-4o model answers general questions about what's present in the images. You can also show it video if you use Vision enhancement.",
                                        "value": "gpt-4o"
                                    },
                                    {
                                        "label": "GPT-4",
                                        "description": "GPT-4 can solve difficult problems with greater accuracy than any of OpenAI's previous models. Like GPT-3.5 Turbo, GPT-4 is optimized for chat and works well for traditional completions tasks. Use the Chat Completions API to use GPT-4.",
                                        "value": "gpt-4"
                                    },
                                    {
                                        "label": "GPT-4-32k",
                                        "description": "GPT-4 can solve difficult problems with greater accuracy than any of OpenAI's previous models. Like GPT-3.5 Turbo, GPT-4 is optimized for chat and works well for traditional completions tasks. Use the Chat Completions API to use GPT-4.",
                                        "value": "gpt-4-32k"
                                    },
                                    {
                                        "label": "GPT-4-Vision",
                                        "description": "GPT-4 Turbo with Vision is a large multimodal model (LMM) developed by OpenAI that can analyze images and provide textual responses to questions about them. It incorporates both natural language processing and visual understanding.The GPT-4 Turbo with Vision model answers general questions about what's present in the images. You can also show it video if you use Vision enhancement.",
                                        "value": "gpt-4-vision"
                                    },
                                    {
                                        "label": "Embeddings",
                                        "description": "OpenAI offers a powerful second-generation embedding model (denoted by -002 in the model ID). It’s better, cheaper, and simpler to use than previous embeddings models.",
                                        "value": "text-embedding-ada-002"
                                    },
                                    {
                                        "label": "GPT-35-Turbo",
                                        "description": "GPT-3.5 models can understand and generate natural language or code. The most capable and cost effective model in the GPT-3.5 family is GPT-3.5 Turbo, which has been optimized for chat and works well for traditional completions tasks as well.",
                                        "value": "gpt-35-turbo"
                                    },
                                    {
                                        "label": "GPT-35-Turbo-16k",
                                        "description": "GPT-3.5 models can understand and generate natural language or code. The most capable and cost effective model in the GPT-3.5 family is GPT-3.5 Turbo, which has been optimized for chat and works well for traditional completions tasks as well.",
                                        "value": "gpt-35-turbo-16k"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiModelSettings').aiModelDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiContentSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Content Filter Settings",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "aiContentText",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": true,
                            "options": {
                                "text": "The default content filtering configuration is set to filter at the medium severity threshold for all four content harms categories for both, prompts and completions. This means that content that is detected at severity level medium or high is filtered, while content detected at severity level low is not filtered by the content filters. Customers are responsible for ensuring that applications integrating Azure OpenAI comply with the Code of Conduct.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://learn.microsoft.com/azure/ai-services/openai/concepts/content-filter?tabs=warning%2Cpython"
                                }
                            }
                        },
                        {
                            "name": "aiContentFilter",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Create Content Filter",
                            "defaultValue": "Yes",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "aiContentFilterName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Content Filter Name",
                            "placeholder": "",
                            "defaultValue": "",
                            "toolTip": "Use only allowed characters",
                            "constraints": {
                                "required": true,
                                "regex": "^[a-z0-9A-Z-]{1,10}$",
                                "validationMessage": "Only alphanumeric characters are allowed, and the value must be 1-10 characters long."
                            },
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiContentPromptThreshold",
                            "type": "Microsoft.Common.Section",
                            "label": "Prompt",
                            "elements": [],
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiContentHateFilterPrompt",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Hate Severity Threshold",
                            "placeholder": "",
                            "defaultValue": "Medium",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the severity threshold",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Low",
                                        "description": "Block Low, Medium and High",
                                        "value": "low"
                                    },
                                    {
                                        "label": "Medium",
                                        "description": "Allow Low / Block Medium and High.",
                                        "value": "medium"
                                    },
                                    {
                                        "label": "High",
                                        "description": "Allow Low, Medium / Block High",
                                        "value": "high"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiContentSexualFilterPrompt",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Sexual Severity Threshold",
                            "placeholder": "",
                            "defaultValue": "Medium",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the severity threshold",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Low",
                                        "description": "Block Low, Medium and High",
                                        "value": "low"
                                    },
                                    {
                                        "label": "Medium",
                                        "description": "Allow Low / Block Medium and High.",
                                        "value": "medium"
                                    },
                                    {
                                        "label": "High",
                                        "description": "Allow Low, Medium / Block High",
                                        "value": "high"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiContentHarmFilterPrompt",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Self-harm Severity Threshold",
                            "placeholder": "",
                            "defaultValue": "Medium",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the severity threshold",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Low",
                                        "description": "Block Low, Medium and High",
                                        "value": "low"
                                    },
                                    {
                                        "label": "Medium",
                                        "description": "Allow Low / Block Medium and High.",
                                        "value": "medium"
                                    },
                                    {
                                        "label": "High",
                                        "description": "Allow Low, Medium / Block High",
                                        "value": "high"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiContentViolenceFilterPrompt",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Violence Severity Threshold",
                            "placeholder": "",
                            "defaultValue": "Medium",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the severity threshold",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Low",
                                        "description": "Block Low, Medium and High",
                                        "value": "low"
                                    },
                                    {
                                        "label": "Medium",
                                        "description": "Allow Low / Block Medium and High.",
                                        "value": "medium"
                                    },
                                    {
                                        "label": "High",
                                        "description": "Allow Low, Medium / Block High",
                                        "value": "high"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiContentCompletionThreshold",
                            "type": "Microsoft.Common.Section",
                            "label": "Completion",
                            "elements": [],
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiContentHateFilterCompletion",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Hate Severity Threshold",
                            "placeholder": "",
                            "defaultValue": "Medium",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the severity threshold",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Low",
                                        "description": "Block Low, Medium and High",
                                        "value": "low"
                                    },
                                    {
                                        "label": "Medium",
                                        "description": "Allow Low / Block Medium and High.",
                                        "value": "medium"
                                    },
                                    {
                                        "label": "High",
                                        "description": "Allow Low, Medium / Block High",
                                        "value": "high"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiContentSexualFilterCompletion",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Sexual Severity Threshold",
                            "placeholder": "",
                            "defaultValue": "Medium",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the severity threshold",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Low",
                                        "description": "Block Low, Medium and High",
                                        "value": "low"
                                    },
                                    {
                                        "label": "Medium",
                                        "description": "Allow Low / Block Medium and High.",
                                        "value": "medium"
                                    },
                                    {
                                        "label": "High",
                                        "description": "Allow Low, Medium / Block High",
                                        "value": "high"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiContentHarmFilterCompletion",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Self-harm Severity Threshold",
                            "placeholder": "",
                            "defaultValue": "Medium",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the severity threshold",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Low",
                                        "description": "Block Low, Medium and High",
                                        "value": "low"
                                    },
                                    {
                                        "label": "Medium",
                                        "description": "Allow Low / Block Medium and High.",
                                        "value": "medium"
                                    },
                                    {
                                        "label": "High",
                                        "description": "Allow Low, Medium / Block High",
                                        "value": "high"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiContentViolenceFilterCompletion",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Violence Severity Threshold",
                            "placeholder": "",
                            "defaultValue": "Medium",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the severity threshold",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Low",
                                        "description": "Block Low, Medium and High",
                                        "value": "low"
                                    },
                                    {
                                        "label": "Medium",
                                        "description": "Allow Low / Block Medium and High.",
                                        "value": "medium"
                                    },
                                    {
                                        "label": "High",
                                        "description": "Allow Low, Medium / Block High",
                                        "value": "high"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiAddContentSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Additional Content Filter Settings (Preview)",
                            "elements": [],
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiAddContentText",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]",
                            "options": {
                                "text": "Enable additional content safety models that can be run on top of the main content filters. These models are optional.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://learn.microsoft.com/azure/ai-services/openai/concepts/content-filter?tabs=warning%2Cpython"
                                }
                            }
                        },
                        {
                            "name": "aiAddContentFilter",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable additional content safety models",
                            "defaultValue": "Yes",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiModelSettings').aiContentFilter, 'Yes')]"
                        },
                        {
                            "name": "aiProtectedJailbreak",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Jailbreak",
                            "placeholder": "",
                            "defaultValue": "No",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Enable or disable the setting",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes",
                                        "description": "An AI model that detects jailbreak attempts, a user interaction strategy that gets the model to bypass desired behavior that was set by the model developer in order to violate content policies or safety policies originally set. Runs on prompts.",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "description": "The model will not detect jailbreak attempts.",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiModelSettings').aiContentFilter, 'Yes'), equals(steps('aiModelSettings').aiAddContentFilter, 'Yes'))]"
                        },
                        {
                            "name": "aiProtectedMaterialText",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Protected Material Text",
                            "placeholder": "",
                            "defaultValue": "No",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Enable or disable the setting",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes",
                                        "description": "A model that helps detect and protect against regurgitation of language that matches known text content (e.g song lyrics, articles, recipes, selected web content). Runs on completions.",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "description": "The model will not detect and protect against regurgitation of language that matches known text content.",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiModelSettings').aiContentFilter, 'Yes'), equals(steps('aiModelSettings').aiAddContentFilter, 'Yes'))]"
                        },
                        {
                            "name": "aiProtectedMaterialCode",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Protected Material Code",
                            "placeholder": "",
                            "defaultValue": "No",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Enable or disable the setting",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes",
                                        "description": "A model that helps detect source code that matches a set of source code from public repositories, and provide example citation and license information in annotations. Runs on completions.",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "description": "The model will not detect ource code that matches a set of source code from public repositories, and provide example citation and license information in annotations.",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiModelSettings').aiContentFilter, 'Yes'), equals(steps('aiModelSettings').aiAddContentFilter, 'Yes'))]"
                        }
                    ]
                },
                {
                    "name": "aiAuxiliarySettings",
                    "label": "Use Cases and Additional Services",
                    "subLabel": {
                        "preValidation": "",
                        "postValidation": "Done"
                    },
                    "bladeTitle": "Auxiliary services",
                    "elements": [
                        {
                            "name": "aiAuxiliaryText",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": true,
                            "options": {
                                "icon": "None",
                                "text": "Subject to your initial use cases, you can enable additional Azure services for the complete Enterprise Azure OpenAI Hub architecture on Azure.",
                                "uri": "https://www.microsoft.com"
                            }
                        },
                        {
                            "name": "aiUseCaseSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Use Cases",
                            "elements": [],
                            "visible": true
                        },
                        {
                            "name": "aiUseCaseText",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": true,
                            "options": {
                                "text": "Technology is advancing at an unprecedented pace, and businesses are seeking innovative ways to maintain a competitive edge. Nowhere is this truer than in the realms of generative AI. From generating realistic images and videos to enhancing customer experiences, generative AI has proven to be a versatile tool across various industries.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://azure.microsoft.com/en-us/blog/azure-openai-service-10-ways-generative-ai-is-transforming-businesses/"
                                }
                            }
                        },
                        {
                            "name": "aiUseCaseDeployment",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Create required Azure services for the initial use cases",
                            "defaultValue": "Yes",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": true
                        },
                        {
                            "name": "aiUseCaseSelection",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Select the initial use case you want to deploy",
                            "placeholder": "",
                            "defaultValue": "Image and video recognition",
                            "toolTip": "",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "defaultDescription": "Select the initial use case you want to start with.",
                            "filter": true,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Image and video recognition",
                                        "description": "Analyze images and provide textual responses to questions about them. It incorporates both natural language processing and visual understanding.",
                                        "value": "vision"
                                    },
                                    {
                                        "label": "'On Your Data'",
                                        "description": "Empowers your organization to leverage the power of OpenAI models, such as GPT-4, and incorporates the advanced capabilities of RAG (Retrieval Augmented Generation) model, directly on your data with enterprise-grade security on Azure.",
                                        "value": "onyourdata"
                                    },
                                    {
                                        "label": "AI Assistant for videos (Preview)",
                                        "description": "Extract key insights and identify scenes suited for short video clip generation for social media, using Azure Video Indexer and Azure OpenAI Assistant (Preview) APIs",
                                        "value": "video"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]"
                        },
                        {
                            "name": "onYourVisionArchitecture",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision')]",
                            "options": {
                                "icon": "None",
                                "text": "<b> </b><img src='https://raw.githubusercontent.com/Azure/ai-hub/main/docs/azure-video-architecture.svg'>"
                            }
                        },
                        {
                            "name": "onYourDataArchitecture",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]",
                            "options": {
                                "icon": "None",
                                "text": "<b> </b><img src='https://raw.githubusercontent.com/Azure/ai-hub/main/docs/azure-rag-architecture.svg'>"
                            }
                        },
                        {
                            "name": "assistantVideoArchitecture",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'video')]",
                            "options": {
                                "icon": "None",
                                "text": "<b> </b><img src='https://raw.githubusercontent.com/Azure/ai-hub/main/docs/azure-assistant-architecture.svg'>"
                            }
                        },
                        {
                            "name": "aiModelAddInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]",
                            "options": {
                                "icon": "warning",
                                "text": "To support the initial use case, additional Azure OpenAI model deployments will be created."
                            }
                        },
                        {
                            "name": "aiSampleAppSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Sample Web App for 'On Your Data' use case (Optional)",
                            "elements": [],
                            "visible": "[and(equals(steps('basics').aiIntention, 'Single'),equals(steps('basics').aiDeployOption, 'PoC') ,equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'))]"
                        },
                        {
                            "name": "aiSampleAppInfo",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": "[and(equals(steps('basics').aiIntention, 'Single'),equals(steps('basics').aiDeployOption, 'PoC') ,equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'))]",
                            "options": {
                                "icon": "None",
                                "text": "The sample Web App enables your organization to quickly validate and explore ChatGPT on your own business data. To integrated with Entra ID for authentication, you can create a new Application Registration now with a client secret, or do it post deployment by following the documentation.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://github.com/microsoft/sample-app-aoai-chatGPT"
                                }
                            }
                        },
                        {
                            "name": "aiSampleAppDeployment",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Deploy sample Web App for 'On Your Data' use case",
                            "defaultValue": "No",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes, with App Registration",
                                        "value": "YesWithAppRegistration"
                                    },
                                    {
                                        "label": "Yes, but without App Registration",
                                        "value": "YesWithoutAppRegistration"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('basics').aiIntention, 'Single'),equals(steps('basics').aiDeployOption, 'PoC') ,equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'))]"
                        },
                        {
                            "name": "spnSection",
                            "type": "Microsoft.Common.Section",
                            "visible": "[and(equals(steps('basics').aiIntention, 'Single'),equals(steps('basics').aiDeployOption, 'PoC') ,equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), equals(steps('aiAuxiliarySettings').aiSampleAppDeployment, 'YesWithAppRegistration'))]",
                            "label": "App Registration and Service Principal",
                            "elements": [
                                {
                                    "name": "aiServicePrincipal",
                                    "type": "Microsoft.Common.ServicePrincipalSelector",
                                    "label": {
                                        "password": "Password",
                                        "certificateThumbprint": "Certificate thumbprint",
                                        "authenticationType": "Authentication Type",
                                        "sectionHeader": "Service Principal"
                                    },
                                    "toolTip": {
                                        "password": "Provide the application secret as it will be used to authenticate with Azure AD",
                                        "certificateThumbprint": "Certificate thumbprint",
                                        "authenticationType": "Authentication Type"
                                    },
                                    "defaultValue": {
                                        "principalId": "",
                                        "name": ""
                                    },
                                    "constraints": {
                                        "required": true
                                    },
                                    "options": {
                                        "hideCertificate": true
                                    }
                                }
                            ]
                        },
                        {
                            "name": "aiAddVisionSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Required services for the 'Image and video recognition' use case",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision')]"
                        },
                        {
                            "name": "aiAddOnYouDataSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Required services for the 'On Your Data' use case",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "aiDedicatedInfo",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]",
                            "options": {
                                "icon": "None",
                                "text": "For using Azure OpenAI in the same Azure region while getting additional quota and capacity, it is recommended to deploy into separate Azure subscriptions to avoid the capacity is shared.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://github.com/Azure/ai-hub"
                                }
                            }
                        },
                        {
                            "name": "aiAddEmbeddingInstance",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Create a dedicated Azure OpenAI instance to orchestrate index creation and generate embeddings in AI Search",
                            "defaultValue": "Yes, in a separate subscription (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes, in a separate subscription (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "Yes, in the same subscription",
                                        "value": "Same"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": false
                        },
                        {
                            "name": "aiDedicatedSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Dedicated Azure OpenAI instace for index and embeddings",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiAddEmbeddingInstance, 'Yes')]",
                            "elements": [
                                {
                                    "name": "subinfo",
                                    "type": "Microsoft.Common.TextBlock",
                                    "visible": true,
                                    "options": {
                                        "text": "Select the additional subscription that will be used for the dedicated Azure OpenAI instance to orchestrate indexes and generate embeddings to AI Search."
                                    }
                                },
                                {
                                    "type": "Microsoft.Common.SubscriptionSelector",
                                    "name": "aiDedicatedSubscriptionId",
                                    "label": "Additional subscription"
                                }
                            ]
                        },
                        {
                            "name": "aiDedicatedSubnetId",
                            "type": "Microsoft.Common.TextBox",
                            "label": "ResourceId of existing subnet in the additional subscription for connecting Private Endpoint",
                            "placeholder": "",
                            "defaultValue": "",
                            "toolTip": "Use only allowed characters",
                            "constraints": {
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiAddEmbeddingInstance, 'Yes'), equals(steps('aiSettings').aiDisableNetworkAccess, 'Yes'))]"
                        },
                        {
                            "name": "aiSearchSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure AI Search",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiSearchInfo",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]",
                            "options": {
                                "icon": "None",
                                "text": "Azure AI Search, an AI-powered information retrieval platform, helps developers build rich search experiences and generative AI apps that combine large language models with enterprise data. Implement search functionality for any mobile or search application within your organization or as part of software as a service (SaaS) apps.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://learn.microsoft.com/azure/search/search-what-is-azure-search"
                                }
                            }
                        },
                        {
                            "name": "aiSearchReliabilitySection",
                            "type": "Microsoft.Common.Section",
                            "label": "Scale and Capacity Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiSearchReplicas",
                            "type": "Microsoft.Common.Slider",
                            "min": 1,
                            "max": 5,
                            "label": "Replicas distribute workloads across the service",
                            "subLabel": "Replicas",
                            "defaultValue": 1,
                            "showStepMarkers": true,
                            "toolTip": "Replicas distribute workloads across the service. We guarantee 99.9% availability for read operations with 2 replicas, and for read and write operations with 3 or more replicas.",
                            "constraints": {
                                "required": false
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiSearchPartitions",
                            "type": "Microsoft.Common.Slider",
                            "min": 1,
                            "max": 5,
                            "label": "Partitions allow for scaling of document counts",
                            "subLabel": "Partitions",
                            "defaultValue": 1,
                            "showStepMarkers": true,
                            "toolTip": "Partitions allow for scaling of document counts as well as faster data ingestion by spanning your index over multiple units.",
                            "constraints": {
                                "required": false
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiSearchNetworkSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Network Settings",
                            "elements": [],
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "aiSearchDisableNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Disable Public Network Access",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "aiSearchNetworkingInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiSearchDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "The VNet and subnet you select can be in a different Azure region then the Private Endpoint for Azure AI search. Ensure you have connectivity to the other services you are creating."
                            }
                        },
                        {
							"name": "aiSearchVnetSelector",
							"type": "Microsoft.Solutions.ResourceSelector",
							"label": "Select an existing Virtual Network",
							"resourceType": "Microsoft.Network/virtualNetworks",
							"options": {
								"filter": {
									"subscription": "onBasics",
									"location": "all"
								}
							},
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiSearchDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
						{
							"name": "aiSearchSubnets",
							"type": "Microsoft.Solutions.ArmApiControl",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiAuxiliarySettings').aiSearchVnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiAuxiliarySettings').aiSearchVnetSelector.name,'/subnets?api-version=2022-01-01')]"
							}
						},
						{
							"name": "aiSearchSubnetList",
							"type": "Microsoft.Common.DropDown",
							"label": "Select an existing Subnet",
							"filter": true,
							"constraints": {
								"allowedValues": "[map(steps('aiAuxiliarySettings').aiSearchSubnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]",
								"required": true
							},
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiSearchDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
                        {  
                            "name": "aiSearchSelectedVnetDetails",  
                            "type": "Microsoft.Solutions.ArmApiControl",  
                            "request": {  
                                "method": "GET",  
                                "path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiAuxiliarySettings').aiSearchVnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiAuxiliarySettings').aiSearchVnetSelector.name, '?api-version=2022-01-01')]"  
                            }  
                        },
                        {
                            "name": "aiSearchNetworkingRegionOutputInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiSearchDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes'), not(equals(steps('aiAuxiliarySettings').aiSearchSelectedVnetDetails.location, steps('basics').resourceScope.location.name)), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "Note you are creating the Private Endpoint into a different Azure Region then Azure AI Search. Ensure you have connectivity with the other Azure services you are creating in case their Private Endpoints are in different regions and Virtual Networks"
                            }
                        },
                        {
                            "name": "aiSearchPrivateEndpointInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes'), equals(steps('aiAuxiliarySettings').aiSearchDisableNetworkAccess, 'Yes'))]",
                            "options": {
                                "icon": "warning",
                                "text": "To allow access to your Azure AI Search resource from Azure OpenAI resource, you need to submit an application form. The application will be reviewed in 10 business days and you will be contacted via email about the results. If you are eligible, we will provision the private endpoint in Microsoft managed virtual network, and send a private endpoint connection request to your search service, and you will need to approve the request.",
                                "uri": "https://forms.office.com/pages/responsepage.aspx?id=v4j5cvGGr0GRqy180BHbRw_T3EIZ1KNCuv_1duLJBgpUMUcwV1Y5QjI3UTVTMkhSVUo3R09NNVQxSyQlQCN0PWcu"
                            }
                        },
                        {
                            "name": "authzSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Authorization Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiSearchRbacAuthz",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Azure RBAC authorization",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No, use local authorization with API key",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiSearchSystemIdentity",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Managed Identity (System-assigned) for Azure AI Search",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "When enabling Managed Identity and usage of Customer-Managed keys, this identity will have RBAC permission access the Azure OpenAI instance.",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiSearchMonSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Monitor Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiSearchMonCreation",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Diagnostic Settings for logging and threat detection",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseDeployment, 'Yes')]"
                        },
                        {
                            "name": "aiAddServicesSectionVision",
                            "type": "Microsoft.Common.Section",
                            "label": "Required services for the selected use case",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision')]"
                        },
                        {
                            "name": "aiVisionSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure AI Vision",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision')]"
                        },
                        {
                            "name": "aiVisionInfo",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision')]",
                            "options": {
                                "icon": "None",
                                "text": "Azure AI Vision is a unified service that offers innovative computer vision capabilities. Give your apps the ability to analyze images, read text, and detect faces with prebuilt image tagging, text extraction with optical character recognition (OCR), and responsible facial recognition. Incorporate vision features into your projects with no machine learning experience required.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://azure.microsoft.com/en-us/services/cognitive-services/computer-vision/"
                                }
                            }
                        },
                        {
                            "name": "aiVisionNetworkSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Network Settings",
                            "elements": [],
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "aiVisionDisableNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Disable Public Network Access",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "aiVisionRestrictOutboundNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Restric Outbound Network Access for AI Vision",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiVisionDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "aiVisionNetworkingInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiVisionDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision'), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "The VNet and subnet you select can be in a different Azure region then the Private Endpoint for AI Vision. Ensure you have connectivity to the other services you are creating."
                            }
                        },
                        {
							"name": "aiVisionVnetSelector",
							"type": "Microsoft.Solutions.ResourceSelector",
							"label": "Select an existing Virtual Network",
							"resourceType": "Microsoft.Network/virtualNetworks",
							"options": {
								"filter": {
									"subscription": "onBasics",
									"location": "all"
								}
							},
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiVisionDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
						{
							"name": "aiVisionSubnets",
							"type": "Microsoft.Solutions.ArmApiControl",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiAuxiliarySettings').aiVisionVnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiAuxiliarySettings').aiVisionVnetSelector.name,'/subnets?api-version=2022-01-01')]"
							}
						},
						{
							"name": "aiVisionSubnetList",
							"type": "Microsoft.Common.DropDown",
							"label": "Select an existing Subnet",
							"filter": true,
							"constraints": {
								"allowedValues": "[map(steps('aiAuxiliarySettings').aiVisionSubnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]",
								"required": true
							},
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiVisionDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
                        {  
                            "name": "aiVisionSelectedVnetDetails",  
                            "type": "Microsoft.Solutions.ArmApiControl",  
                            "request": {  
                                "method": "GET",  
                                "path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiAuxiliarySettings').aiVisionVnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiAuxiliarySettings').aiVisionVnetSelector.name, '?api-version=2022-01-01')]"  
                            }  
                        },
                        {
                            "name": "aiVisionNetworkingRegionOutputInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiVisionDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision'), not(equals(steps('aiAuxiliarySettings').aiVisionSelectedVnetDetails.location, steps('basics').resourceScope.location.name)), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "Note you are creating the Private Endpoint into a different Azure Region then AI Vision. Ensure you have connectivity with the other Azure services you are creating in case their Private Endpoints are in different regions and Virtual Networks"
                            }
                        },
                        {
                            "name": "aiVisionauthzSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Authorization Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision')]"
                        },
                        {
                            "name": "aiVisionRbacAuthz",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Azure RBAC authorization",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No, use local authorization with API key",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": false
                        },
                        {
                            "name": "aiVisionSystemIdentity",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Managed Identity (System-assigned) for Azure AI Vision",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "When enabling Managed Identity and usage of Customer-Managed keys, this identity will have RBAC permission access the Azure OpenAI instance.",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision')]"
                        },
                        {
                            "name": "aiVisionMonSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Monitor Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision')]"
                        },
                        {
                            "name": "aiVisionMonCreation",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Diagnostic Settings for logging and threat detection",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'vision')]"
                        },
                        {
                            "name": "aiAddServicesSectionVideoIndexer",
                            "type": "Microsoft.Common.Section",
                            "label": "Required services for the selected use case",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'video')]"
                        },
                        {
                            "name": "aiVideoIndexerSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure AI Video Indexer",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'video')]"
                        },
                        {
                            "name": "aiVideoIndexerInfo",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'video')]",
                            "options": {
                                "icon": "None",
                                "text": "Azure AI Video Indexer is a cloud application, part of Azure AI services, built on Azure AI services (such as the Face, Translator, Azure AI Vision, and Speech). It enables you to extract the insights from your videos using Azure AI Video Indexer video and audio models.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://azure.microsoft.com/products/ai-video-indexer"
                                }
                            }
                        },
                        
                        {
                            "name": "aiVideoIndexerAuthzSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Authorization Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'video')]"
                        },
                        {
                            "name": "aiVideoIndexerSystemIdentity",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Managed Identity (System-assigned) for Azure AI Video Indexer",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "When enabling Managed Identity and usage of Customer-Managed keys, this identity will have RBAC permission access the Azure OpenAI instance.",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'video')]"
                        },
                        {
                            "name": "aiVideoIndexerMonSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Monitor Settings",
                            "elements": [],
                            "visible": false
                        },
                        {
                            "name": "aiVideoIndexerMonCreation",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Diagnostic Settings for logging and threat detection",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": false
                        },
                        {
                            "name": "aiAddServicesSectionOnYourData",
                            "type": "Microsoft.Common.Section",
                            "label": "Required services for the selected use case",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "aiDocSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure AI Document Intelligence",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "aiDocInfo",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]",
                            "options": {
                                "icon": "None",
                                "text": "Azure AI Document Intelligence enables you to effectively manage the velocity at which data is collected and processed and is key to improved operations, informed data-driven decisions, and enlightened innovation.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://learn.microsoft.com/azure/ai-services/document-intelligence/overview?view=doc-intel-4.0.0"
                                }
                            }
                        },
                        {
                            "name": "aiDocLocation",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Select the Azure region for the Document Intelligence with the required API version",
                            "placeholder": "",
                            "defaultValue": "",
                            "toolTip": "Select the supported Azure region for the Document Intelligence with the required API version.",
                            "multiselect": false,
                            "multiLine": true,
                            "selectAll": false,
                            "filter": false,
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "East US",
                                        "value": "eastus"
                                    },
                                    {
                                        "label": "West Europe",
                                        "value": "westeurope"
                                    },
                                    {
                                        "label": "West US2",
                                        "value": "westus2"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), equals(steps('aiAuxiliarySettings').aiDocDisableNetworkAccess, 'No'))]"
                        },
                        {
                            "name": "aiDocNetworkSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Network Settings",
                            "elements": [],
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "aiDocDisableNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Disable Public Network Access",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "aiDocRestrictOutboundNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Restric Outbound Network Access for Document Intelligence",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiDocDisableNetworkAccess, 'Yes'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "aiDocNetworkingInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiDocDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "The VNet and subnet you select can be in a different Azure region then the Private Endpoint for Document Intelligence. Ensure you have connectivity to the other services you are creating."
                            }
                        },
                        {
							"name": "aiDocVnetSelector",
							"type": "Microsoft.Solutions.ResourceSelector",
							"label": "Select an existing Virtual Network",
							"resourceType": "Microsoft.Network/virtualNetworks",
							"options": {
								"filter": {
									"subscription": "onBasics",
									"location": "all"
								}
							},
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiDocDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
						{
							"name": "aiDocSubnets",
							"type": "Microsoft.Solutions.ArmApiControl",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiAuxiliarySettings').aiDocVnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiAuxiliarySettings').aiDocVnetSelector.name,'/subnets?api-version=2022-01-01')]"
							}
						},
						{
							"name": "aiDocSubnetList",
							"type": "Microsoft.Common.DropDown",
							"label": "Select an existing Subnet",
							"filter": true,
							"constraints": {
								"allowedValues": "[map(steps('aiAuxiliarySettings').aiDocSubnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]",
								"required": true
							},
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiDocDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
                        {  
                            "name": "aiDocSelectedVnetDetails",  
                            "type": "Microsoft.Solutions.ArmApiControl",  
                            "request": {  
                                "method": "GET",  
                                "path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiAuxiliarySettings').aiDocVnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiAuxiliarySettings').aiDocVnetSelector.name, '?api-version=2022-01-01')]"  
                            }  
                        },
                        {
                            "name": "aiDocNetworkingRegionOutputInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiDocDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('aiAuxiliarySettings').aiDocSelectedVnetDetails.location, steps('basics').resourceScope.location.name)), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "Note you are creating the Private Endpoint into a different Azure Region then Document Intelligence. Ensure you have connectivity with the other Azure services you are creating in case their Private Endpoints are in different regions and Virtual Networks"
                            }
                        },
                        {
                            "name": "aiDocauthzSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Authorization Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "aiDocRbacAuthz",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Azure RBAC authorization",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No, use local authorization with API key",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "aiDocSystemIdentity",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Managed Identity (System-assigned) for Azure AI Document Intelligence",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "When enabling Managed Identity, this identity will have RBAC permission access the Azure OpenAI instance.",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "aiDocMonSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Monitor Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "aiDocMonCreation",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Diagnostic Settings for logging and threat detection",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "aiAddServicesSectionOnYourData",
                            "type": "Microsoft.Common.Section",
                            "label": "Required services for the selected use case",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "cosmosSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Cosmos DB Account",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "cosmosInfo",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]",
                            "options": {
                                "icon": "None",
                                "text": "Azure Cosmos DB is a globally distributed, multi-model database service and offered by Microsoft. It is designed to provide high availability, scalability, and low-latency access to data for modern applications. Cosmos DB is used to persist prompt results as part of the index pipelines provided by Azure Data Factory.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://learn.microsoft.com/azure/cosmos-db/introduction"
                                }
                            }
                        },
                        {
                            "name": "cosmosNetworkSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Network Settings",
                            "elements": [],
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "cosmosDisableNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Disable Public Network Access",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "cosmosNetworkingInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').cosmosDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "The VNet and subnet you select can be in a different Azure region then the Private Endpoint for Cosmos DB. Ensure you have connectivity to the other services you are creating."
                            }
                        },
                        {
							"name": "cosmosVnetSelector",
							"type": "Microsoft.Solutions.ResourceSelector",
							"label": "Select an existing Virtual Network",
							"resourceType": "Microsoft.Network/virtualNetworks",
							"options": {
								"filter": {
									"subscription": "onBasics",
									"location": "all"
								}
							},
                            "visible": "[and(equals(steps('aiAuxiliarySettings').cosmosDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
						{
							"name": "cosmosSubnets",
							"type": "Microsoft.Solutions.ArmApiControl",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiAuxiliarySettings').cosmosVnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiAuxiliarySettings').cosmosVnetSelector.name,'/subnets?api-version=2022-01-01')]"
							}
						},
						{
							"name": "cosmosSubnetList",
							"type": "Microsoft.Common.DropDown",
							"label": "Select an existing Subnet",
							"filter": true,
							"constraints": {
								"allowedValues": "[map(steps('aiAuxiliarySettings').cosmosSubnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]",
								"required": true
							},
                            "visible": "[and(equals(steps('aiAuxiliarySettings').cosmosDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
                        {  
                            "name": "cosmosSelectedVnetDetails",  
                            "type": "Microsoft.Solutions.ArmApiControl",  
                            "request": {  
                                "method": "GET",  
                                "path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiAuxiliarySettings').cosmosVnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiAuxiliarySettings').cosmosVnetSelector.name, '?api-version=2022-01-01')]"  
                            }  
                        },
                        {
                            "name": "cosmosNetworkingRegionOutputInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').cosmosDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('aiAuxiliarySettings').cosmosSelectedVnetDetails.location, steps('basics').resourceScope.location.name)), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "Note you are creating the Private Endpoint into a different Azure Region then Cosmos DB. Ensure you have connectivity with the other Azure services you are creating in case their Private Endpoints are in different regions and Virtual Networks"
                            }
                        },
                        {
                            "name": "cosmosAuthzSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Authorization Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "cosmosRbacAuthz",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Azure RBAC authorization",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No, use local authorization with API key",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "cosmosSystemIdentity",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Managed Identity (System-assigned) for Cosmos DB",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "When enabling Managed Identity, this identity will have RBAC permission access the Azure OpenAI instance.",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "cosmosMonSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Monitor Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "cosmosMonCreation",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Diagnostic Settings for logging and threat detection",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "aiAddServicesSectionOnYourData",
                            "type": "Microsoft.Common.Section",
                            "label": "Required services for the selected use case",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "dfSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Data Factory",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "dfInfo",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]",
                            "options": {
                                "icon": "None",
                                "text": "Azure Data Factory is a cloud-based data integration service that allows you to create, schedule, and orchestrate data pipelines for moving and transforming data between different data stores. In this setup Data Factory will provide pipelines for index creation in Azure AI Search for RAG based use cases.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://learn.microsoft.com/azure/data-factory/introduction"
                                }
                            }
                        },
                        {
                            "name": "dfNetworkSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Network Settings",
                            "elements": [],
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "dfDisableNetworkAccess",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Disable Public Network Access",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[and(equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
                        },
                        {
                            "name": "dfNetworkingInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').dfDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "The VNet and subnet you select can be in a different Azure region then the Private Endpoint for Data Factory. Ensure you have connectivity to the other services you are creating."
                            }
                        },
                        {
							"name": "dfVnetSelector",
							"type": "Microsoft.Solutions.ResourceSelector",
							"label": "Select an existing Virtual Network",
							"resourceType": "Microsoft.Network/virtualNetworks",
							"options": {
								"filter": {
									"subscription": "onBasics",
									"location": "all"
								}
							},
                            "visible": "[and(equals(steps('aiAuxiliarySettings').dfDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
						{
							"name": "dfSubnets",
							"type": "Microsoft.Solutions.ArmApiControl",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiAuxiliarySettings').dfVnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiAuxiliarySettings').dfVnetSelector.name,'/subnets?api-version=2022-01-01')]"
							}
						},
						{
							"name": "dfSubnetList",
							"type": "Microsoft.Common.DropDown",
							"label": "Select an existing Subnet",
							"filter": true,
							"constraints": {
								"allowedValues": "[map(steps('aiAuxiliarySettings').dfSubnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]",
								"required": true
							},
                            "visible": "[and(equals(steps('aiAuxiliarySettings').dfDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('basics').aiIntention, 'Multiple')))]"
						},
                        {  
                            "name": "dfSelectedVnetDetails",  
                            "type": "Microsoft.Solutions.ArmApiControl",  
                            "request": {  
                                "method": "GET",  
                                "path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups/', last(take(split(steps('aiAuxiliarySettings').dfVnetSelector.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('aiAuxiliarySettings').dfVnetSelector.name, '?api-version=2022-01-01')]"  
                            }  
                        },
                        {
                            "name": "dfNetworkingRegionOutputInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(equals(steps('aiAuxiliarySettings').dfDisableNetworkAccess, 'Yes'), equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata'), not(equals(steps('aiAuxiliarySettings').dfSelectedVnetDetails.location, steps('basics').resourceScope.location.name)), not(equals(steps('basics').aiIntention, 'Multiple')))]",
                            "options": {
                                "icon": "warning",
                                "text": "Note you are creating the Private Endpoint into a different Azure Region then Data Factory. Ensure you have connectivity with the other Azure services you are creating in case their Private Endpoints are in different regions and Virtual Networks"
                            }
                        },
                        {
                            "name": "dfAuthzSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Authorization Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "dfSystemIdentity",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Managed Identity (System-assigned) for Data Factory",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "When enabling Managed Identity, this identity will have RBAC permission access the Azure OpenAI instance.",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "dfMonSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Azure Monitor Settings",
                            "elements": [],
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        },
                        {
                            "name": "dfMonCreation",
                            "type": "Microsoft.Common.OptionsGroup",
                            "label": "Enable Diagnostic Settings for logging and threat detection",
                            "defaultValue": "Yes (recommended)",
                            "toolTip": "",
                            "constraints": {
                                "allowedValues": [
                                    {
                                        "label": "Yes (recommended)",
                                        "value": "Yes"
                                    },
                                    {
                                        "label": "No",
                                        "value": "No"
                                    }
                                ],
                                "required": true
                            },
                            "visible": "[equals(steps('aiAuxiliarySettings').aiUseCaseSelection, 'onyourdata')]"
                        }
                    ]
                }
            ]
        },
        "outputs": {
            "parameters": {
                "prefix": "[steps('basics').prefix]",
                "kvSoftDelete": "[steps('kvSettings').kvSoftDelete]",
                "kvSoftDeleteRetention": "[steps('kvSettings').kvSoftDeleteRetention]",
                "kvPurgeProtection": "[steps('kvSettings').kvPurgeProtection]",
                "kvRbacAuthz": "[steps('kvSettings').kvRbacAuthz]",
                "kvDisableNetworkAccess": "[steps('kvSettings').kvDisableNetworkAccess]",
                "kvSubnetId": "[steps('kvSettings').subnetList]",
                "kvNwLocation": "[steps('kvSettings').selectedVnetDetails.location]",
                "stCmkKeyName": "[steps('stSettings').stCmkKeyName]",
                "stHttpsOnly": "[steps('stSettings').stHttpsOnly]",
                "stDisableNetworkAccess": "[steps('stSettings').stDisableNetworkAccess]",
                "stNwLocation": "[steps('stSettings').selectedVnetDetails.location]",
                "stSubnetId": "[steps('stSettings').subnetList]",
                "stRbacAuthz": "[steps('stSettings').stRbacAuthz]",
                "aiRbacAuthz": "[steps('aiSettings').aiRbacAuthz]",
                "aiDisableNetworkAccess": "[steps('aiSettings').aiDisableNetworkAccess]",
                "aiSubnetId": "[steps('aiSettings').subnetList]",
                "aiCmkKeyName": "[steps('aiSettings').aiCmkKeyName]",
                "aiRestrictOutboundNetworkAccess": "[steps('aiSettings').aiRestrictOutboundNetworkAccess]",
                "aiSystemIdentity": "[steps('aiSettings').aiSystemIdentity]",
                "aiNwLocation": "[steps('aiSettings').selectedVnetDetails.location]",
                "location": "[steps('basics').resourceScope.location.name]",
                "aiModelDeployment": "[steps('aiModelSettings').aiModelDeployment]",
                "aiModelDeploymentName": "[steps('aiModelSettings').aiModelDeploymentName]",
                "aiModelVersion": "[steps('aiModelSettings').aiModelVersion]",
                "aiContentFilter": "[steps('aiModelSettings').aiContentFilter]",
                "aiContentFilterName": "[steps('aiModelSettings').aiContentFilterName]",
                "aiProtectedJailbreak": "[steps('aiModelSettings').aiProtectedJailbreak]",
                "aiProtectedMaterialText": "[steps('aiModelSettings').aiProtectedMaterialText]",
                "aiProtectedMaterialCode": "[steps('aiModelSettings').aiProtectedMaterialCode]",
                "aiContentHarmFilterPrompt": "[steps('aiModelSettings').aiContentHarmFilterPrompt]",
                "aiContentHateFilterPrompt": "[steps('aiModelSettings').aiContentHateFilterPrompt]",
                "aiContentSexualFilterPrompt": "[steps('aiModelSettings').aiContentSexualFilterPrompt]",
                "aiContentViolenceFilterPrompt": "[steps('aiModelSettings').aiContentViolenceFilterPrompt]",
                "aiContentHarmFilterCompletion": "[steps('aiModelSettings').aiContentHarmFilterCompletion]",
                "aiContentHateFilterCompletion": "[steps('aiModelSettings').aiContentHateFilterCompletion]",
                "aiContentSexualFilterCompletion": "[steps('aiModelSettings').aiContentSexualFilterCompletion]",
                "aiContentViolenceFilterCompletion": "[steps('aiModelSettings').aiContentViolenceFilterCompletion]",
                "aiSearchDisableNetworkAccess": "[steps('aiAuxiliarySettings').aiSearchDisableNetworkAccess]",
                "aiSearchNwLocation": "[steps('aiAuxiliarySettings').aiSearchSelectedVnetDetails.location]",
                "aiSearchRbacAuthz": "[steps('aiAuxiliarySettings').aiSearchRbacAuthz]",
                "aiSearchSubnetId": "[steps('aiAuxiliarySettings').aiSearchSubnetList]",
                "aiSearchSystemIdentity": "[steps('aiAuxiliarySettings').aiSearchSystemIdentity]",
                "aiSearchReplicas": "[string(steps('aiAuxiliarySettings').aiSearchReplicas)]",
                "aiSearchPartitions": "[string(steps('aiAuxiliarySettings').aiSearchPartitions)]",
                "aiUseCaseDeployment": "[steps('aiAuxiliarySettings').aiUseCaseDeployment]",
                "kvMonCreation": "[steps('kvSettings').kvMonCreation]",
                "stMonCreation": "[steps('stSettings').stMonCreation]",
                "aiMonCreation": "[steps('aiSettings').aiMonCreation]",
                "aiSearchMonCreation": "[steps('aiAuxiliarySettings').aiSearchMonCreation]",
                "visionDisableNetworkAccess": "[steps('aiAuxiliarySettings').aiVisionDisableNetworkAccess]",
                "visionRbacAuthz": "[steps('aiAuxiliarySettings').aiVisionRbacAuthz]",
                "visionNwLocation": "[steps('aiAuxiliarySettings').aiVisionSelectedVnetDetails.location]",
                "visionSubnetId": "[steps('aiAuxiliarySettings').aiVisionSubnetList]",
                "visionSystemIdentity": "[steps('aiAuxiliarySettings').aiVisionSystemIdentity]",
                "visionMonCreation": "[steps('aiAuxiliarySettings').aiVisionMonCreation]",
                "visionRestrictOutboundNetworkAccess": "[steps('aiAuxiliarySettings').aiVisionRestrictOutboundNetworkAccess]",
                "aiUseCaseSelection": "[steps('aiAuxiliarySettings').aiUseCaseSelection]",
                "aiSampleAppDeployment": "[steps('aiAuxiliarySettings').aiSampleAppDeployment]",
                "aiAppId": "[steps('aiAuxiliarySettings').spnSection.aiServicePrincipal.appId]",
                "aiAppSecret": "[steps('aiAuxiliarySettings').spnSection.aiServicePrincipal.password]",
                "aiMultiLocation": "[steps('basics').aiMultiLocation]",
                "docDisableNetworkAccess": "[steps('aiAuxiliarySettings').aiDocDisableNetworkAccess]",
                "docRbacAuthz": "[steps('aiAuxiliarySettings').aiDocRbacAuthz]",
                "docNwLocation": "[steps('aiAuxiliarySettings').aiDocSelectedVnetDetails.location]",
                "docLocation": "[if(not(empty(steps('aiAuxiliarySettings').aiDocLocation)), steps('aiAuxiliarySettings').aiDocLocation, steps('basics').resourceScope.location.name)]",
                "docSubnetId": "[steps('aiAuxiliarySettings').aiDocSubnetList]",
                "docSystemIdentity": "[steps('aiAuxiliarySettings').aiDocSystemIdentity]",
                "docMonCreation": "[steps('aiAuxiliarySettings').aiDocMonCreation]",
                "docRestrictOutboundNetworkAccess": "[steps('aiAuxiliarySettings').aiDocRestrictOutboundNetworkAccess]",
                "aiAddEmbeddingInstance": "[steps('aiAuxiliarySettings').aiAddEmbeddingInstance]",
                "aiDedicatedSubnetId": "[steps('aiAuxiliarySettings').aiDedicatedSubnetId]",
                "aiDedicatedSubscriptionId": "[steps('aiAuxiliarySettings').aiDedicatedSection.aiDedicatedSubscriptionId]",
                "apimLocation": "[steps('basics').apimLocation]",
                "cosmosDbDisableNetworkAccess": "[steps('aiAuxiliarySettings').cosmosDisableNetworkAccess]",
                "cosmosDbRbacAuthz": "[steps('aiAuxiliarySettings').cosmosRbacAuthz]",
                "cosmosDbNwLocation": "[steps('aiAuxiliarySettings').cosmosSelectedVnetDetails.location]",
                "cosmosDbSubnetId": "[steps('aiAuxiliarySettings').cosmosSubnetList]",
                "cosmosDbSystemIdentity": "[steps('aiAuxiliarySettings').cosmosSystemIdentity]",
                "cosmosDbMonCreation": "[steps('aiAuxiliarySettings').cosmosMonCreation]",
                "dfDisableNetworkAccess": "[steps('aiAuxiliarySettings').dfDisableNetworkAccess]",
                "dfNwLocation": "[steps('aiAuxiliarySettings').dfSelectedVnetDetails.location]",
                "dfSubnetId": "[steps('aiAuxiliarySettings').dfSubnetList]",
                "dfSystemIdentity": "[steps('aiAuxiliarySettings').dfSystemIdentity]",
                "dfMonCreation": "[steps('aiAuxiliarySettings').dfMonCreation]",
                "videoSystemIdentity": "[steps('aiAuxiliarySettings').aiVideoIndexerSystemIdentity]",
                "videoMonCreation": "[steps('aiAuxiliarySettings').aiVideoIndexerMonCreation]"
            },
            "kind": "Subscription",
            "location": "[steps('basics').resourceScope.location.name]",
            "subscriptionId": "[steps('basics').resourceScope.subscription.id]"
        }
    }
}