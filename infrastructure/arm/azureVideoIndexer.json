{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "rgName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Provide the name of the resource group where the Azure AI Vision instance that will be created"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Select the location for the Azure AI Vision instance that will be created"
            }
        },
        "prefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Provide name for the Azure AI Vision instance that will be created"
            }
        },
        "videoSystemIdentity": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "videoMonCreation": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        }
    },
    "variables": {
        "name-compliant-azureVideoIndexer": "[concat(parameters('prefix'), '-', parameters('location'), '-aivideo')]",
        "name-compliant-storage": "[toLower(take(concat(replace(replace(parameters('prefix'), '-', ''), '_', ''), parameters('location'), uniqueString(deployment().name)), 23))]",
        "name-compliant-azMon": "[concat(parameters('prefix'), '-', parameters('location'), '-azmon')]",
        "videoIdentity": {
            "type": "SystemAssigned"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2022-09-01",
            "name": "[parameters('rgName')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "azureVideoIndexer",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2023-01-01",
                            "name": "[variables('name-compliant-storage')]",
                            "location": "[parameters('location')]",
                            "sku": {
                                "name": "Standard_LRS"
                            },
                            "kind": "StorageV2",
                            "identity": "[if(equals(parameters('videoSystemIdentity'), 'Yes'), variables('videoIdentity'), json('null'))]",
                            "properties": {
                                "accessTier": "Hot",
                                "supportsHttpsTrafficOnly": true,
                                "minimumTlsVersion": "TLS1_2",
                                "allowBlobPublicAccess": false,
                                "allowSharedKeyAccess": true,
                                "allowCrossTenantReplication": false,
                                "defaultToOAuthAuthentication": "[if(equals(parameters('videoSystemIdentity'), 'Yes'), bool('true'), bool('false'))]",
                                "allowedCopyScope": "AAD",
                                "publicNetworkAccess": "Enabled",
                                "isLocalUserEnabled": false,
                                "isSftpEnabled": false
                            }
                        },
                        {
                            "type": "Microsoft.VideoIndexer/accounts",
                            "apiVersion": "2024-01-01",
                            "name": "[variables('name-compliant-azureVideoIndexer')]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "[concat('Microsoft.Storage/storageAccounts/', variables('name-compliant-storage'))]"
                            ],
                            "identity": "[if(equals(parameters('videoSystemIdentity'), 'Yes'), variables('videoIdentity'), json('null'))]",
                            "properties": {
                                "accountId": "",
                                "storageServices": {
                                    "resourceId": "[concat(subscription().id, '/resourceGroups/', parameters('rgName'), '/providers/Microsoft.Storage/storageAccounts/', variables('name-compliant-storage'))]"
                                }
                            }
                        },
                        {
                            "condition": "[equals(parameters('videoMonCreation'), 'Yes')]",
                            "type": "Microsoft.VideoIndexer/accounts/providers/diagnosticSettings",
                            "apiVersion": "2021-05-01-preview",
                            "name": "[concat(variables('name-compliant-azureVideoIndexer'), '/', 'Microsoft.Insights/diag')]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "[concat('Microsoft.VideoIndexer/accounts/', variables('name-compliant-azureVideoIndexer'))]"
                            ],
                            "properties": {
                                "workspaceId": "[concat(subscription().id, '/resourceGroups/', parameters('rgName'), '/providers/Microsoft.OperationalInsights/workspaces/', variables('name-compliant-azMon'))]",
                                "logs": [
                                    {
                                        "categoryGroup": "allLogs",
                                        "enabled": true
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {}
}